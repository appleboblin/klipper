[gcode_macro pause]
description: Pauses the current print.
  Usage: PAUSE [X=<pos>] [Y=<pos>] [Z=<pos>] [E=<retract_length>] [B=<beeps>]
rename_existing: _KM_PAUSE_BASE
gcode:
  {% set km = printer["gcode_macro _km_globals"] %}
  # Retract length (negative)
  {% set E = (params.E|default(5))|float %}
  # Beeps
  {% set B = params.B|default(10)|int if "output_pin beeper" in printer else 0
  %}

  {% if printer.pause_resume.is_paused %}
    { action_respond_info("Print already paused") }
  {% elif printer.idle_timeout.state | string == "Printing" or
          (printer.virtual_sdcard|default({})).is_active|default(False) %}
    _KM_PRINT_STATUS ACTION=CHANGE STATUS=pausing RESET_STACK=1
    {% set position = printer.gcode_move.gcode_position %}
    SET_GCODE_VARIABLE MACRO=resume VARIABLE=saved_x VALUE="{position.x}"
    SET_GCODE_VARIABLE MACRO=resume VARIABLE=saved_y VALUE="{position.y}"
    SET_GCODE_VARIABLE MACRO=resume VARIABLE=saved_z VALUE="{position.z}"
    SET_GCODE_VARIABLE MACRO=resume VARIABLE=saved_e VALUE="{E}"
    SAVE_GCODE_STATE NAME=_KM_PAUSE_OVERRIDE_STATE
    _KM_PAUSE_BASE
    M83
    {% if printer.extruder.can_extrude %}
      G1 E{'%.4f' % -E} F{km.load_speed}
    {% endif %}
    PARK P=2{% for k in params|select("in", "XYZ") %}{
        ' '~k~'="'~params[k]~'"'}{% endfor %}
    # Beep on pause if there's an M300 macro.
    {% for i in range(B) %}
      M300 P100
      G4 P200
    {% endfor %}
  {% else %}
    { action_respond_info("Print not in progress") }
  {% endif %}

[gcode_macro resume]
description: Resumes the currently paused print.
  Usage: RESUME [E<pos>]
rename_existing: _KM_RESUME_BASE
variable_saved_extruder_temp: 0
variable_saved_x: 0.0
variable_saved_y: 0.0
variable_saved_z: 0.0
variable_saved_e: 0.0
gcode:
  {% if printer.pause_resume.is_paused %}
    {% set km = printer["gcode_macro _km_globals"] %}
    # Warm the extruder back up if needed.
    {% set extruder = printer[printer.toolhead.extruder] %}
    {% if extruder.target <= printer.configfile.settings[
                               printer.toolhead.extruder].min_temp
                             | float + 0.5 %}
      M109 S{saved_extruder_temp}
    {% endif %}

    # If there's no saved_e assume we're completing a filament change and
    # retract enough to avoid drooling on the model.
    {% if 'E' not in params and not saved_e %}
      {% set saved_e = 5.0 %}
      G1 E{'%.4f' % -saved_e } F{km.load_speed}
    {% endif %}

    SET_GCODE_VARIABLE MACRO=resume VARIABLE=saved_extruder_temp VALUE="{0}"
    G90
    # Move back to last position before unretracting.
    G0 X{saved_x} Y{saved_y} F{km.travel_speed_xy}
    G0 Z{saved_z} F{km.travel_speed_z}
    G91
    # Unretract
    G1 E{'%.4f' % (params.E|default(saved_e))} F{km.load_speed}
    RESTORE_GCODE_STATE NAME=_KM_PAUSE_OVERRIDE_STATE MOVE=1
    _KM_RESUME_BASE
  {% else %}
    { action_respond_info("Printer is not paused.") }
  {% endif %}
  _KM_PRINT_STATUS ACTION=CHANGE STATUS=printing RESET_STACK=1

# TODO: Fix casing after front-ends get fixed
[gcode_macro CANCEL_PRINT]
description: Cancels the current print.
  Usage: CANCEL_PRINT
rename_existing: _KM_CANCEL_PRINT_BASE
gcode:
  _KM_CHECK_IS_PRINTING
  _KM_PRINT_STATUS ACTION=CHANGE STATUS=cancelling RESET_STACK=1
  SET_GCODE_VARIABLE MACRO=_print_end_inner VARIABLE=cancelled VALUE="{True}"
  PRINT_END
  _KM_CANCEL_PRINT_BASE
  {% if printer.pause_resume.is_paused %}
    RESTORE_GCODE_STATE NAME=_KM_PAUSE_OVERRIDE_STATE MOVE=0
  {% endif %}
  CLEAR_PAUSE
  _KM_APPLY_PRINT_OFFSET RESET=1
  {% if 'virtual_sdcard' in printer and not printer.virtual_sdcard.is_active %}
    SDCARD_RESET_FILE
  {% endif %}

[gcode_macro START_PRINT]
gcode:
  G90 ; use absolute coordinates
  M83 ; extruder relative mode
  G29 ; BLTouch
  #G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
  #G1 X0.1 Y20 Z0.3 F5000.0 ; Move to start position
  
[gcode_macro FINISH_PRINT]
gcode:
  BED_MESH_CLEAR
  G91 ;Relative positioning
  G1 E-0.5 F2700 ;Retract a bit
  G1 E-0.5 Z0.2 F2400 ;Retract and raise Z
  G1 X5 Y5 F3000 ;Wipe out
  G1 Z10 ;Raise Z more
  G90 ;Absolute positionning
  G1 X0 Y210 ;Present print
  M106 S0 ;Turn-off fan
  M104 S0 ;Turn-off hotend
  M140 S0 ;Turn-off bed
  M84 X Y E ;Disable all steppers but Z

[gcode_macro PRIME_LINE]
gcode:
  G1 Z2 F240
  G1 X0.1 Y10 F3000
  G1 Z0.28 F240
  G92 E0
  G1 Y190 E15 F1500 ; intro line
  G1 X0.4 F5000
  G92 E0
  G1 Y10 E15 F1200 ; intro line
  G92 E0

[gcode_macro G29]
gcode:
  G28
  G1 Z10 F600
  BED_MESH_CALIBRATE
  BED_MESH_OUTPUT 

[gcode_macro UNLOAD]
gcode:
  G1 E2 F150 # extrude some at 2.5mm/s
  G1 E-0.5 F2400 # pull back fast to prevent ozzing at 40mm/s
  G1 E-40 F900 # slowly pulls out while cooling at 15mm/s
  G90

[gcode_macro PURGE]
gcode:
  G91
  G1 E45.0 F250
  G90

[gcode_macro LOAD]
gcode:
  G91
  G1 E40 F250 # push in slowly at 4.17mm/s
  G90

[gcode_macro m600]
description: Pauses the current print.
  Usage: M600 [B<beeps>] [E<pos>] [L<pos>] [R<temp>] [U<pos>] [X<pos>] [Y<pos>]
              [Z<pos>]
gcode:
  PAUSE B="{0}" P=2{% for k in params|select("in", "EXYZ") %}{
      ' '~k~'="'~params[k]~'"'}{% endfor %}
  UNLOAD_FILAMENT{% if 'U' in params %} LENGTH={params.U}{% endif
               %} BEEPS="{params.B|default(10)|int}"
  {% if 'R' in params %}M109 S{params.R}{% endif %}

[gcode_macro LOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=LOAD                                                  ;Save state
    G91                                                                         ;Relative positioning
      G1 E40 F250
    G90                                                                         ;Absolute positioning
    RESTORE_GCODE_STATE NAME=LOAD                               ;Restore state
    SET_IDLE_TIMEOUT TIMEOUT=7200                               ;Timeout
